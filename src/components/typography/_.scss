.typography {
  // --tw-typography-lead: #4b5563;
  --typographyFontSize: #{rem(14)};
  // --clrText: rgb(var( --clrText ) / 1);
  // --clrHeadings: rgb(var( --clrHeadings ) / 1);
  // --clrLinks: rgb(var( --clrLinks ) / 1);
  // --clrBold: rgb(var( --clrBold ) / 1);
  // --clrCounters: rgb(var( --clrCounters ) / 1);
  // --clrBullets: rgb(var( --clrBullets ) / 1);
  // --clrHr: rgb(var( --clrHr ) / 1);
  // --clrQuotes: rgb(var( --clrQuotes ) / 1);
  // --clrQuoteBorders: rgb(var( --clrQuoteBorders ) / 1);
  // --clrCaptions: rgb(var( --clrCaptions ) / 1);
  // --clrCode: rgb(var( --clrCode ) / 1);
  // --clrPreCode: rgb(var( --clrPreCode ) / 1);
  // --clrPreBg: rgb(var( --clrPreBg ) / 1);
  // --clrThBorders: rgb(var( --clrThBorders ) / 1);
  // --clrTdBorders: rgb(var( --clrTdBorders ) / 1);
  // --tw-typography-invert-body: #d1d5db;
  // --tw-typography-invert-headings: #fff;
  // --tw-typography-invert-lead: #9ca3af;
  // --tw-typography-invert-links: #fff;
  // --tw-typography-invert-bold: #fff;
  // --tw-typography-invert-counters: #9ca3af;
  // --tw-typography-invert-bullets: #4b5563;
  // --tw-typography-invert-hr: #374151;
  // --tw-typography-invert-quotes: #f3f4f6;
  // --tw-typography-invert-quote-borders: #374151;
  // --tw-typography-invert-captions: #9ca3af;
  // --tw-typography-invert-code: #fff;
  // --tw-typography-invert-pre-code: #d1d5db;
  // --tw-typography-invert-pre-bg: rgb(0 0 0 / 50%);
  // --tw-typography-invert-th-borders: #4b5563;
  // --tw-typography-invert-td-borders: #374151;
  font-size: rgb(var(--typographyFontSize) / 1);
  line-height: 1.75;
  color: rgb(var(--clrText) / 1);
  // max-width: 65ch;

  // & :where([class~="lead"]):not(:where([class~="not-typography"] *)) {
  //   color: var(--tw-typography-lead);
  //   font-size: 1.25em;
  //   line-height: 1.6;
  //   margin-top: 1.2em;
  //   margin-bottom: 1.2em;
  // }
  & :where(a):not(:where([class~="not-typography"] *)) {
    color: rgb(var(--clrLinks) / 1);
    text-decoration: underline;
    font-weight: 500;
    font-family: $typograhpyFontFamily;
    font-size: 1rem;
    text-decoration-color: rgb(var(--clrTheme) / 1);
    text-underline-offset: 4px;
    transition: all .3s ease-in-out;
  }
  & :where(a):not(:where([class~="not-typography"] *)):hover {
    color: rgb(var(--clrHover) / 1);
  }
  & :where(a):not(:where([class~="not-typography"] *)).btn {
    font-family: $typograhpyFontFamily;
    font-size: 1.25rem;
    color: #fff;
    background-color: rgb(var(--clrTheme) / 1);
    border-radius: 0.375rem;
    padding-top: 0.5rem;
    padding-bottom: 0.5rem;
    padding-left: 1.5rem;
    padding-right: 1.5rem;
    transition-property: all;
    transition-duration: 300ms;
    text-transform: uppercase;
  }
  & :where(a):not(:where([class~="not-typography"] *)).btn--flare {
    display: inline-flex;
    position: relative;
    overflow: hidden;
  }
  & :where(a):not(:where([class~="not-typography"] *)).btn--flare:before {
    content: "";
    position: absolute;
    top: 0;
    height: 100%;
    width: 45px;
    transform: skewX(-45deg);
    left: -150%;
    background: linear-gradient(90deg, rgb(255, 255, 255, 0.1), rgb(255, 255, 255, 0.4));
    animation: flareAnimation 3s infinite linear;
  }
  & :where(strong):not(:where([class~="not-typography"] *)) {
    color: rgb(var(--clrBold) / 1);
    font-weight: 600;
  }
  & :where(a strong):not(:where([class~="not-typography"] *)) {
    color: inherit;
  }
  & :where(blockquote strong):not(:where([class~="not-typography"] *)) {
    color: inherit;
  }
  & :where(thead th strong):not(:where([class~="not-typography"] *)) {
    color: inherit;
  }
  & :where(ol):not(:where([class~="not-typography"] *)) {
    list-style-type: decimal;
    margin-top: 1.25em;
    margin-bottom: 1.25em;
    padding-left: 1.625em;
  }
  & :where(ol[type="A"]):not(:where([class~="not-typography"] *)) {
    list-style-type: upper-alpha;
  }
  & :where(ol[type="a"]):not(:where([class~="not-typography"] *)) {
    list-style-type: lower-alpha;
  }
  & :where(ol[type="A" s]):not(:where([class~="not-typography"] *)) {
    list-style-type: upper-alpha;
  }
  & :where(ol[type="a" s]):not(:where([class~="not-typography"] *)) {
    list-style-type: lower-alpha;
  }
  & :where(ol[type="I"]):not(:where([class~="not-typography"] *)) {
    list-style-type: upper-roman;
  }
  & :where(ol[type="i"]):not(:where([class~="not-typography"] *)) {
    list-style-type: lower-roman;
  }
  & :where(ol[type="I" s]):not(:where([class~="not-typography"] *)) {
    list-style-type: upper-roman;
  }
  & :where(ol[type="i" s]):not(:where([class~="not-typography"] *)) {
    list-style-type: lower-roman;
  }
  & :where(ol[type="1"]):not(:where([class~="not-typography"] *)) {
    list-style-type: decimal;
  }
  & :where(ul):not(:where([class~="not-typography"] *)) {
    list-style-type: disc;
    margin-top: 1.25em;
    margin-bottom: 1.25em;
    padding-left: 1.625em;
  }
  & :where(ol > li):not(:where([class~="not-typography"] *))::marker {
    font-weight: 400;
    color: rgb(var(--clrCounters) / 1);
  }
  & :where(ul > li):not(:where([class~="not-typography"] *))::marker {
    color: rgb(var(--clrBullets) / 1);
  }
  & :where(hr):not(:where([class~="not-typography"] *)) {
    border-color: rgb(var(--clrTheme) / 80);
    border-top-width: 2px;
    margin-top: 0.75rem;
    margin-bottom: 0.75rem;
  }
  & :where(blockquote):not(:where([class~="not-typography"] *)) {
    font-weight: 500;
    font-style: italic;
    color: rgb(var(--clrQuotes) / 1);
    border-left-width: 0.25rem;
    border-left-color: rgb(var(--clrQuoteBorders) / 1);
    quotes: "\201C""\201D""\2018""\2019";
    margin-top: 1.6em;
    margin-bottom: 1.6em;
    padding-left: 1em;
    border: 0;
  }
  & :where(blockquote):not(:where([class~="not-typography"] *)) p {
    font-family: $typograhpyFontFamily;
    font-weight: 600;
    font-style: normal;
    color: rgb(var(--clrHeading) / 1);
  }
  & :where(blockquote):not(:where([class~="not-typography"] *)) img {
    display: inline-block;
    width: 5rem;
    height: 5rem;
    border-radius: 100%;
    margin-bottom: 1.25rem;
  }
  & :where(blockquote p:first-of-type):not(:where([class~="not-typography"] *))::before {
    content: open-quote;
  }
  & :where(blockquote p:last-of-type):not(:where([class~="not-typography"] *))::after {
    content: close-quote;
  }
  & :where(h1):not(:where([class~="not-typography"] *)) {
    color: var(--clrHeadings);
    font-weight: 800;
    font-size: 2.25em;
    margin-top: 0;
    margin-bottom: 1.25rem;
    line-height: 1.1111111;
  }
  & :where(h1 strong):not(:where([class~="not-typography"] *)) {
    font-weight: 900;
    color: inherit;
  }
  & :where(h2):not(:where([class~="not-typography"] *)) {
    color: rgb(var(--clrHeadings) / 1);
    font-weight: 700;
    font-size: 1.5em;
    margin-top: 2em;
    margin-bottom: 1rem;
    line-height: 1.3333333;
  }
  & :where(h2 strong):not(:where([class~="not-typography"] *)) {
    font-weight: 800;
    color: inherit;
  }
  & :where(h3):not(:where([class~="not-typography"] *)) {
    color: rgb(var(--clrHeadings) / 1);
    font-weight: 600;
    font-size: 1.25em;
    margin-top: 1.6em;
    margin-bottom: 0.75rem;
    line-height: 1.6;
  }
  & :where(h3 strong):not(:where([class~="not-typography"] *)) {
    font-weight: 700;
    color: inherit;
  }
  & :where(h4):not(:where([class~="not-typography"] *)) {
    color: rgb(var(--clrHeadings) / 1);
    font-weight: 600;
    margin-top: 1.5em;
    margin-bottom: 0.5rem;
    line-height: 1.5;
  }
  & :where(h4 strong):not(:where([class~="not-typography"] *)) {
    font-weight: 700;
    color: inherit;
  }
  & :where(img):not(:where([class~="not-typography"] *)) {
    margin-top: 2em;
    margin-bottom: 2em;
  }
  & :where(figure > *):not(:where([class~="not-typography"] *)) {
    margin-top: 0;
    margin-bottom: 0;
  }
  & :where(figcaption):not(:where([class~="not-typography"] *)) {
    color: rgb(var(--clrHeadings) / 1);
    font-size: 0.875em;
    line-height: 1.4285714;
    margin-top: 0.8571429em;
  }
  & :where(code):not(:where([class~="not-typography"] *)) {
    color: rgb(var(--clrCode) / 1);
    font-weight: 600;
    font-size: 0.875em;
  }
  & :where(code):not(:where([class~="not-typography"] *))::before {
    content: "`";
  }
  & :where(code):not(:where([class~="not-typography"] *))::after {
    content: "`";
  }
  & :where(a code):not(:where([class~="not-typography"] *)) {
    color: inherit;
  }
  & :where(h1 code):not(:where([class~="not-typography"] *)) {
    color: inherit;
  }
  & :where(h2 code):not(:where([class~="not-typography"] *)) {
    color: inherit;
    font-size: 0.875em;
  }
  & :where(h3 code):not(:where([class~="not-typography"] *)) {
    color: inherit;
    font-size: 0.9em;
  }
  & :where(h4 code):not(:where([class~="not-typography"] *)) {
    color: inherit;
  }
  & :where(blockquote code):not(:where([class~="not-typography"] *)) {
    color: inherit;
  }
  & :where(thead th code):not(:where([class~="not-typography"] *)) {
    color: inherit;
  }
  & :where(pre):not(:where([class~="not-typography"] *)) {
    color: rgb(var(--clrPreCode) / 1);
    background-color: rgb(var(--clrPreBg) / 1);
    overflow-x: auto;
    font-weight: 400;
    font-size: 0.875em;
    line-height: 1.7142857;
    margin-top: 1.7142857em;
    margin-bottom: 1.7142857em;
    border-radius: 0.375rem;
    padding-top: 0.8571429em;
    padding-right: 1.1428571em;
    padding-bottom: 0.8571429em;
    padding-left: 1.1428571em;
  }
  & :where(pre code):not(:where([class~="not-typography"] *)) {
    background-color: transparent;
    border-width: 0;
    border-radius: 0;
    padding: 0;
    font-weight: inherit;
    color: inherit;
    font-size: inherit;
    font-family: inherit;
    line-height: inherit;
  }
  & :where(pre code):not(:where([class~="not-typography"] *))::before {
    content: none;
  }
  & :where(pre code):not(:where([class~="not-typography"] *))::after {
    content: none;
  }
  & :where(table):not(:where([class~="not-typography"] *)) {
    width: 100%;
    table-layout: auto;
    text-align: left;
    margin-top: 2em;
    margin-bottom: 2em;
    font-size: 0.875em;
    line-height: 1.7142857;
  }
  & :where(thead):not(:where([class~="not-typography"] *)) {
    border-bottom-width: 1px;
    border-bottom-color: rgb(var(--clrThBorders) / 1);
  }
  & :where(thead th):not(:where([class~="not-typography"] *)) {
    color: rgb(var(--clrHeadings) / 1);
    font-weight: 600;
    vertical-align: bottom;
    padding-right: 0.5714286em;
    padding-bottom: 0.5714286em;
    padding-left: 0.5714286em;
  }
  & :where(tbody tr):not(:where([class~="not-typography"] *)) {
    border-bottom-width: 1px;
    border-bottom-color: rgb(var(--clrTdBorders) / 1);
  }
  & :where(tbody tr:last-child):not(:where([class~="not-typography"] *)) {
    border-bottom-width: 0;
  }
  & :where(tbody td):not(:where([class~="not-typography"] *)) {
    vertical-align: baseline;
  }
  & :where(tfoot):not(:where([class~="not-typography"] *)) {
    border-top-width: 1px;
    border-top-color: rgb(var(--clrThBorders) / 1);
  }
  & :where(tfoot td):not(:where([class~="not-typography"] *)) {
    vertical-align: top;
  }
  & :where(p):not(:where([class~="not-typography"] *)) {
    margin-top: 0.75rem;
    margin-bottom: 0.5rem;
    font-family: $typograhpyFontFamily;
    font-weight: 300;
    font-size: 1.125rem;
    line-height: 1.5;
    color: rgb(var(--clrText) / 1);
  }
  & :where(video):not(:where([class~="not-typography"] *)) {
    margin-top: 2em;
    margin-bottom: 2em;
  }
  & :where(figure):not(:where([class~="not-typography"] *)) {
    margin-top: 2em;
    margin-bottom: 2em;
  }
  & :where(li):not(:where([class~="not-typography"] *)) {
    margin-top: 0.5em;
    margin-bottom: 0.5em;
  }
  & :where(ol > li):not(:where([class~="not-typography"] *)) {
    padding-left: 0.375em;
  }
  & :where(ul > li):not(:where([class~="not-typography"] *)) {
    padding-left: 0.375em;
  }
  & :where(& > ul > li p):not(:where([class~="not-typography"] *)) {
    margin-top: 0.75em;
    margin-bottom: 0.75em;
  }
  & :where(& > ul > li > *:first-child):not(:where([class~="not-typography"] *)) {
    margin-top: 1.25em;
  }
  & :where(& > ul > li > *:last-child):not(:where([class~="not-typography"] *)) {
    margin-bottom: 1.25em;
  }
  & :where(& > ol > li > *:first-child):not(:where([class~="not-typography"] *)) {
    margin-top: 1.25em;
  }
  & :where(& > ol > li > *:last-child):not(:where([class~="not-typography"] *)) {
    margin-bottom: 1.25em;
  }
  & :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-typography"] *)) {
    margin-top: 0.75em;
    margin-bottom: 0.75em;
  }
  & :where(hr + *):not(:where([class~="not-typography"] *)) {
    margin-top: 0;
  }
  & :where(h2 + *):not(:where([class~="not-typography"] *)) {
    margin-top: 0;
  }
  & :where(h3 + *):not(:where([class~="not-typography"] *)) {
    margin-top: 0;
  }
  & :where(h4 + *):not(:where([class~="not-typography"] *)) {
    margin-top: 0;
  }
  & :where(thead th:first-child):not(:where([class~="not-typography"] *)) {
    padding-left: 0;
  }
  & :where(thead th:last-child):not(:where([class~="not-typography"] *)) {
    padding-right: 0;
  }
  & :where(tbody td, tfoot td):not(:where([class~="not-typography"] *)) {
    padding-top: 0.5714286em;
    padding-right: 0.5714286em;
    padding-bottom: 0.5714286em;
    padding-left: 0.5714286em;
  }
  & :where(tbody td:first-child, tfoot td:first-child):not(:where([class~="not-typography"] *)) {
    padding-left: 0;
  }
  & :where(tbody td:last-child, tfoot td:last-child):not(:where([class~="not-typography"] *)) {
    padding-right: 0;
  }
  & :where(& > :first-child):not(:where([class~="not-typography"] *)) {
    margin-top: 0;
  }
  & :where(& > :last-child):not(:where([class~="not-typography"] *)) {
    margin-bottom: 0;
  }
  & :where(h1, h2, h3, h4):not(:where([class~="not-typography"] *)) {
    font-family: $typograhpyFontFamily;
    font-weight: 600;
    color: rgb(var(--clrHeading) / 1);
  }
  & :where(span):not(:where([class~="not-typography"] *)) {
    font-family: $typograhpyFontFamily;
    font-weight: 400;
    font-size: 1rem;
    line-height: 1.5;
    color: #6b7280;
    margin-bottom: 1.5rem;
  }
  & :where(.typography):not(:where([class~="not-typography"] *)) {
    font-size: inherit;
    font-family: inherit;
    color: #fff;
    background-color: rgb(var(--clrTheme) / 1);
    padding-top: 0.25rem;
    padding-bottom: 0.25rem;
    padding-left: 0.5rem;
    padding-right: 0.5rem;
    border-radius: 0.375rem;
  }

  @each $fontSize, $breakpointSize in $typograhpyBreakpoints {
    @media screen and (min-width: $breakpointSize) {
      --typographyFontSize: #{rem($fontSize)};
    }
  }
}